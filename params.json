{"name":"gnu-compiler-collection-helper","tagline":"NodeJS tools for GCC","body":"\r\n# gnu-compiler-collection-helper\r\n\r\n## Requirements\r\n\r\n * Node >= 5.0.0, with flag `--es-staging`\r\n\r\n * GCC >= 4.0.0\r\n\r\n## Examples\r\n\r\n### Asynchronous compilation\r\n\r\n```javascript\r\nvar compile = require('gnu-compiler-collection-helper/g++');\r\nnew Promise((resolve, reject) => {\r\n\tvar child_process = compile(['-Wall']. 'hello-world.exe', 'hello-world.cpp');\r\n\tvar stderr = '';\r\n\tchild_process.on('error', reject);\r\n\tchild_process.on('exit', () => stderr ? reject(stderr) : resolve());\r\n\tchild_process.stderr.on('data', (chunk) => stderr += chunk);\r\n}).then(\r\n\t() => console.log('Compile successful'),\r\n\t(error) => console.error(`Compile failed\\n${error}`)\r\n);\r\n```\r\n\r\n### Synchronous compilation\r\n\r\n```javascript\r\nvar compile = require('gnu-compiler-collection-helper/g++-sync');\r\ntry {\r\n\tlet result = compile(['-Wall'], 'hello-world.exe', 'hello-world.cpp');\r\n\tif (result.stderr) throw result.stderr;\r\n\tconsole.log('Compile successful');\r\n} catch (error) {\r\n\tconsole.error(`Compile failed\\n${error}`);\r\n};\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}